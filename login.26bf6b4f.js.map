{"mappings":"oeAEA,MAAMA,EAFNC,EAAA,SAEiBC,QAAMC,OAAO,CAC5BC,QAAS,qCACTC,OAAQ,CACNC,QAAS,C,EAGTC,KAAM,IAAIC,SAASC,MAyCjBA,EAAOC,SAASC,cAAc,kBACpCF,EAAKG,iBAAiB,UAlCRC,MAAMC,IAClBA,EAAEC,iBAEF,IACE,MAAMC,KAAEA,SAAehB,EAASiB,KAAK,GAAI,CACvCZ,OAAQ,KAEJa,EAAQF,EAAKE,MACnBC,aAAaC,QAAQ,cAAeF,E,CAIpC,MAAOG,GACPC,QAAQC,IAAIF,E,CAIdrB,EAASwB,aAAaC,QAAQC,KAC5BC,IACMR,aAAaS,QAAQ,WACvBD,EAAOrB,QAAuB,cAAI,UAAUY,QAC5CI,QAAQC,IAAI,sBAEPI,KAETE,GACSC,QAAQC,OAAOF,IAEzB","sources":["src/login.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://flexyplanner.onrender.com/',\n  params: {\n    headers: {\n      // Authorization: getAuthorizationHeader(),\n    },\n    body: new FormData(form),\n    // body: {\n    //   email: 'user@example.com',\n    //   password: 'qwerty123',\n    // },\n  },\n});\n\nconst login = async e => {\n  e.preventDefault();\n\n  try {\n    const { data } = await instance.post('', {\n      params: {},\n    });\n    const token = data.token;\n    localStorage.setItem('accessToken', token);\n    // axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n\n    // window.location.href = './main.html';\n  } catch (error) {\n    console.log(error);\n    // return error.message;\n  }\n\n  instance.interceptors.request.use(\n    config => {\n      if (localStorage.getItem('token')) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        console.log('Get token from LS');\n      }\n      return config;\n    },\n    error => {\n      return Promise.reject(error);\n    }\n  );\n\n  //  form.removeEventListener('submit', handleSubmit);\n};\n\nconst form = document.querySelector('#admin-form-js');\nform.addEventListener('submit', login);\n\n// // This code sets authorization headers for all requests:\n// axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\n//   'access_token'\n// )}`;\n\n// export const getToken = () =>\n//   localStorage.getItem('accessToken')\n//     ? JSON.parse(localStorage.getItem('accessToken'))\n//     : null;\n\n// export const getAuthorizationHeader = () => `Bearer ${getToken()}`;\n\n// export const fetchSomething = async () => {\n//   try {\n//     const response = await axiosInstance.get(\"/foo\", {\n//       headers: { Authorization: getAuthorizationHeader() }\n//     });\n\n//     return response;\n\n//   } catch (error) {\n//     // error handling\n//   }\n// };\n"],"names":["$e6733a79fedf2e92$var$instance","parcelRequire","default","create","baseURL","params","headers","body","FormData","$e6733a79fedf2e92$var$form","document","querySelector","addEventListener","async","e","preventDefault","data","post","token","localStorage","setItem","error1","console","log","interceptors","request","use","config","getItem","error","Promise","reject"],"version":3,"file":"login.26bf6b4f.js.map"}