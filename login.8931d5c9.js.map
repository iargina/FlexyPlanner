{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,aAEMC,E,WAAWC,QAAMC,OAAO,CAC5BC,QAAS,qCACTC,OAAQ,CACNC,QAAS,C,EAGTC,KAAM,IAAIC,SAASC,MAQjBC,G,EAAQC,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAIRC,EAGFC,E,yEANRF,EAAEG,iB,kBAGuBjB,EAASkB,KAAK,GAAI,CACvCd,OAAQ,K,OADJW,EAAMI,EAAAC,KAAJL,KAGFC,EAAQD,EAAKM,MACnBC,aAAaC,QAAQ,cAAeP,G,gDAKpCQ,QAAQC,IAAGN,EAAAO,I,QAIb1B,EAAS2B,aAAaC,QAAQC,KAC5B,SAAAC,GAKE,OAJIR,aAAaS,QAAQ,WACvBD,EAAOzB,QAAuB,cAAI,UAAgB2B,OAANX,OAC5CG,QAAQC,IAAI,sBAEPK,C,IAET,SAAAG,GACE,OAAOC,QAAQC,OAAOF,E,sEA1BRnB,G,iCAiCdN,EAAO4B,SAASC,cAAc,kBACpC7B,EAAK8B,iBAAiB,SAAU7B,E","sources":["src/login.js"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://flexyplanner.onrender.com/',\n  params: {\n    headers: {\n      // Authorization: getAuthorizationHeader(),\n    },\n    body: new FormData(form),\n    // body: {\n    //   email: 'user@example.com',\n    //   password: 'qwerty123',\n    // },\n  },\n});\n\nconst login = async e => {\n  e.preventDefault();\n\n  try {\n    const { data } = await instance.post('', {\n      params: {},\n    });\n    const token = data.token;\n    localStorage.setItem('accessToken', token);\n    // axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n\n    // window.location.href = './main.html';\n  } catch (error) {\n    console.log(error);\n    // return error.message;\n  }\n\n  instance.interceptors.request.use(\n    config => {\n      if (localStorage.getItem('token')) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        console.log('Get token from LS');\n      }\n      return config;\n    },\n    error => {\n      return Promise.reject(error);\n    }\n  );\n\n  //  form.removeEventListener('submit', handleSubmit);\n};\n\nconst form = document.querySelector('#admin-form-js');\nform.addEventListener('submit', login);\n\n// // This code sets authorization headers for all requests:\n// axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\n//   'access_token'\n// )}`;\n\n// export const getToken = () =>\n//   localStorage.getItem('accessToken')\n//     ? JSON.parse(localStorage.getItem('accessToken'))\n//     : null;\n\n// export const getAuthorizationHeader = () => `Bearer ${getToken()}`;\n\n// export const fetchSomething = async () => {\n//   try {\n//     const response = await axiosInstance.get(\"/foo\", {\n//       headers: { Authorization: getAuthorizationHeader() }\n//     });\n\n//     return response;\n\n//   } catch (error) {\n//     // error handling\n//   }\n// };\n"],"names":["$bpxeT","parcelRequire","$0148b897aad4632e$var$instance","default","create","baseURL","params","headers","body","FormData","$0148b897aad4632e$var$form","$0148b897aad4632e$var$login","$parcel$interopDefault","$2TvXO","mark","_callee","e","data","token1","preventDefault","post","_ctx","sent","token","localStorage","setItem","console","log","t0","interceptors","request","use","config","getItem","concat","error","Promise","reject","document","querySelector","addEventListener"],"version":3,"file":"login.8931d5c9.js.map"}